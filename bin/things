#!/usr/bin/env ruby
# == Synopsis 
# The things command can be used to create new todos from the command line
#
# == Usage
# You can pipe the to-do title into the things command:
#     echo "The new todo" | things
# OR
#     things < todo.txt # => todo.txt contains the title of the new todo
#
# You can supply an argument. In this case things assumes that the given argument is a file.
# The file content will be the note of the new todo.
#
#     things things.txt
#
# == Author
# Stefan Saasen
#
# == Copyright
# Copyright(c), 2009 Stefan Saasen juretta.com
require 'rdoc/usage'

module Things
  class CLI
    def todo_with_note(title)
      lines = DATA.read.inject("") do |str, line|
        line = line.gsub(/%CMD%/, '{name: "", notes:item 1 of argv}') if line =~ /%CMD%/
        str << "-e '#{line.strip}' "
        str
      end
      `osascript #{lines} '#{title.strip}'`
    end
  
    def todo_with_title(title)
      lines = DATA.read.inject("") do |str, line|
        line = line.gsub(/%CMD%/, '{name:item 1 of argv}') if line =~ /%CMD%/
        str << "-e '#{line.strip}' "
        str
      end
      `osascript #{lines} '#{title.strip}'`
    end
  end
end

if STDIN.tty?       
  ARGV.size < 1 ? RDoc::usage('usage') : Things::CLI.new.todo_with_note(open(ARGV[0]).read)
else
  Things::CLI.new.todo_with_title(STDIN.read)
end

__END__
on run argv
  tell application "Things"
   set newToDo to make new to do with properties %CMD%  
  end tell 
end run